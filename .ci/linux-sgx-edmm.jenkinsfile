node('sgx-edmm') {
    checkout scm

    //env.AVX = '1'  // EDMM-capable machines in our CI always have AVX
    env.SGX = '1'
    env.SGX_DRIVER = 'upstream'
    env.EDMM = '1'
    //env.RA_TYPE = 'dcap'

    load '.ci/lib/config-docker.jenkinsfile'

    env.DOCKER_ARGS_SGX += '''
        --volume=/usr/include/x86_64-linux-gnu/asm/sgx.h:/usr/include/asm/sgx.h:ro
        --add-host host.docker.internal:host-gateway
    '''

    docker.build(
        "local:${env.BUILD_TAG}",
        '-f .ci/ubuntu20.04.dockerfile .'
    ).inside("${env.DOCKER_ARGS_COMMON} ${env.DOCKER_ARGS_SGX}") {
        load '.ci/lib/config.jenkinsfile'
        load '.ci/lib/config-release.jenkinsfile'

        //load '.ci/lib/stage-lint.jenkinsfile'
        load '.ci/lib/stage-clean-check-prepare.jenkinsfile'
        load '.ci/lib/stage-build-sgx.jenkinsfile'
        load '.ci/lib/stage-test.jenkinsfile'
        load '.ci/lib/stage-test-sgx.jenkinsfile'

        stage('run-bench') {
            dir('CI-Benchmarks') {
                checkout scm: scmGit(
                    branches: [[name: '*/erica/test-gramine']],
                    extensions: [[$class: 'CloneOption', shallow: true, depth: 1, timeout: 30]],
                    userRemoteConfigs: [[credentialsId: 'chiache', url: 'git@github.com:oscarlab/gramine-edmm-tests.git']])
                
                load '.ci/run-bench.jenkinsfile'
            }
        }

        stage('plot') {
            dir('CI-Benchmarks') {
                load '.ci/plot.jenkinsfile'
            }
        }

        load '.ci/lib/stage-clean-soft-check.jenkinsfile'
    }
}
